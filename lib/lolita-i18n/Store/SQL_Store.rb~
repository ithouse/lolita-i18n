require "json"
require "unicode_utils/upcase"
require "SQL_Store"
require_relative "../Translation"

module Lolita
  module I18n
  
    class SQL_Store #< Abstract_Store

       @store

       attr_accessor :params

      def initialize(possible_store = "nothing")
        if possible_store == "nothing"
         @store =  ::I18n::Backend::ActiveRecord::Translation.new
        else
         @store = ::I18n::Backend::ActiveRecord::Translation.new(possible_store)
          self.params = possible_store
        end
      end

      def new_request(params)
        self.params = params
      end

      def [](key)

        ::I18n::Backend::ActiveRecord::Translation.all.each do |t|
          if t.key == key
            return  t.value
          end
      end
      return nil
    end
      

      def []=(key,value)
        ::I18n::Backend::ActiveRecord::Translation.all.each do |t|
          if t.key == key
            t.value = value
            if t.save
              return true
            else
              return false
            end
          end
      end
      return false
    end

  
      def keys
        @keys = Array.new
        ::I18n::Backend::ActiveRecord::Translation.all.each do |value|
          @keys.push(value.key)
          end
        @keys
      end

    end


  end



end